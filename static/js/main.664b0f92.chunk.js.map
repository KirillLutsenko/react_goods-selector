{"version":3,"sources":["ListShape.jsx","components/ListItem/ListItem.jsx","components/List/List.jsx","App.jsx","index.js"],"names":["preparedListProps","PropTypes","shape","id","number","isRequired","name","string","ListItem","selected","clicker","func","items","arrayOf","item","selectedGoods","clickHandler","type","onClick","className","classNames","item__selected","includes","List","map","key","prepareGoods","good","index","App","state","remover","setState","listOfGoods","indexOfGood","indexOf","splice","push","this","join","React","Component","ReactDOM","render","document","getElementById"],"mappings":"oVAEMA,EAAoBC,IAAUC,MAAM,CACxCC,GAAIF,IAAUG,OAAOC,WACrBC,KAAML,IAAUM,OAAOF,aACtBA,WCAUG,GDEYP,IAAUC,MAAM,CACvCO,SAAUR,IAAUM,OAAOF,WAC3BK,QAAST,IAAUU,KAAKN,WACxBO,MAAOX,IAAUY,QAAQZ,IAAUM,QAAQF,aAIrCJ,IAAUC,MAAMF,GAAmBK,WAC/BJ,IAAUY,QAClBZ,IAAUM,OAAOF,YACjBA,WACOJ,IAAUU,KAAKN,W,MCbF,SAAC,GAAD,IAAGS,EAAH,EAAGA,KAAMC,EAAT,EAASA,cAAeC,EAAxB,EAAwBA,aAAxB,OACtB,4BACEC,KAAK,SACLC,QAAS,kBAAMF,EAAaF,EAAKR,OACjCa,UAAWC,IAAW,eAAgB,CACpCC,eAAgBN,EAAcO,SAASR,EAAKR,SAG7CQ,EAAKR,QCRGiB,G,MAAO,SAAC,GAAD,IAAGX,EAAH,EAAGA,MAAOG,EAAV,EAAUA,cAAeC,EAAzB,EAAyBA,aAAzB,OAClB,wBAAIG,UAAU,kBACXP,EAAMY,KAAI,SAAAV,GAAI,OACb,wBAAIK,UAAU,kBAAkBM,IAAKX,EAAKX,IACxC,kBAAC,EAAD,CACEW,KAAMA,EACNC,cAAeA,EACfC,aAAcA,WCKlBU,G,MAbkB,CACtB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGmCF,KAAI,SAACG,EAAMC,GAAP,MAAkB,CACzDzB,GAAIyB,EACJtB,KAAMqB,OA0DOE,E,4MAtDbC,MAAQ,CACNf,cAAe,I,EAGjBgB,QAAU,WACR,EAAKC,SAAS,CACZjB,cAAe,M,EAInBC,aAAe,SAACV,GAAU,IAChBS,EAAkB,EAAKe,MAAvBf,cACFkB,EAAW,YAAOlB,GAExB,GAAKA,EAAcO,SAAShB,GAErB,CACL,IAAM4B,EAAcnB,EAAcoB,QAAQ7B,GAE1C2B,EAAYG,OAAOF,EAAa,QAJhCD,EAAYI,KAAK/B,GAOnB,EAAK0B,SAAS,CACZjB,cAAc,YAAKkB,M,uDAIb,IACAlB,EAAkBuB,KAAKR,MAAvBf,cAER,OACE,yBAAKI,UAAU,OACb,wBAAIA,UAAU,cAAd,0BACsBJ,EAAcwB,KAAK,QAGzC,4BACEpB,UAAU,qBACVF,KAAK,SACLC,QAASoB,KAAKP,SAHhB,KAQA,kBAAC,EAAD,CACEnB,MAAOc,EACPX,cAAeA,EACfC,aAAcsB,KAAKtB,oB,GAhDXwB,IAAMC,WClBxBC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,W","file":"static/js/main.664b0f92.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\n\nconst preparedListProps = PropTypes.shape({\n  id: PropTypes.number.isRequired,\n  name: PropTypes.string.isRequired,\n}).isRequired;\n\nexport const ListShape = PropTypes.shape({\n  selected: PropTypes.string.isRequired,\n  clicker: PropTypes.func.isRequired,\n  items: PropTypes.arrayOf(PropTypes.string).isRequired,\n});\n\nexport const ListItemShape = {\n  item: PropTypes.shape(preparedListProps).isRequired,\n  selected: PropTypes.arrayOf(\n    PropTypes.string.isRequired,\n  ).isRequired,\n  clicker: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport classNames from 'classnames';\nimport { ListItemShape } from '../../ListShape';\nimport './ListItem.scss';\n\nexport const ListItem = ({ item, selectedGoods, clickHandler }) => (\n  <button\n    type=\"button\"\n    onClick={() => clickHandler(item.name)}\n    className={classNames(`item__button`, {\n      item__selected: selectedGoods.includes(item.name),\n    })}\n  >\n    {item.name}\n  </button>\n);\n\nListItem.propTypes = ListItemShape;\n","import React from 'react';\nimport { ListItem } from '../ListItem';\nimport { ListShape } from '../../ListShape';\nimport './List.scss';\n\nexport const List = ({ items, selectedGoods, clickHandler }) => (\n  <ul className=\"app__list list\">\n    {items.map(item => (\n      <li className=\"list__item item\" key={item.id}>\n        <ListItem\n          item={item}\n          selectedGoods={selectedGoods}\n          clickHandler={clickHandler}\n        />\n      </li>\n    ))\n    }\n  </ul>\n);\n\nList.propTypes = ListShape;\n","import React from 'react';\nimport { List } from './components/List';\nimport './App.scss';\n\nconst goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst prepareGoods = goodsFromServer.map((good, index) => ({\n  id: index,\n  name: good,\n}));\n\nclass App extends React.Component {\n  state = {\n    selectedGoods: [],\n  }\n\n  remover = () => {\n    this.setState({\n      selectedGoods: [],\n    });\n  }\n\n  clickHandler = (name) => {\n    const { selectedGoods } = this.state;\n    const listOfGoods = [...selectedGoods];\n\n    if (!selectedGoods.includes(name)) {\n      listOfGoods.push(name);\n    } else {\n      const indexOfGood = selectedGoods.indexOf(name);\n\n      listOfGoods.splice(indexOfGood, 1);\n    }\n\n    this.setState({\n      selectedGoods: [...listOfGoods],\n    });\n  }\n\n  render() {\n    const { selectedGoods } = this.state;\n\n    return (\n      <div className=\"app\">\n        <h1 className=\"app__title\">\n          {`Selected Goods: ${selectedGoods.join(', ')}`}\n        </h1>\n\n        <button\n          className=\"app__remove-button\"\n          type=\"button\"\n          onClick={this.remover}\n        >\n          X\n        </button>\n\n        <List\n          items={prepareGoods}\n          selectedGoods={selectedGoods}\n          clickHandler={this.clickHandler}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}