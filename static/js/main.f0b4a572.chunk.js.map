{"version":3,"sources":["shapes/PreparedShape.js","list_item/ListItem.js","shapes/ListItemShape.js","list/List.js","shapes/ListShape.js","App.js","index.js"],"names":["PreparedListProps","name","PropTypes","string","isRequired","id","number","ListItem","shape","arrayOf","func","item","selected","clicker","type","onClick","className","classNames","item__selected","includes","List","items","map","key","preparedGoods","index","App","state","clickHandler","listOfProducts","productIndex","indexOf","splice","push","setState","remover","this","join","React","Component","ReactDOM","render","document","getElementById"],"mappings":"uUAEaA,EAAoB,CAC/BC,KAAMC,IAAUC,OAAOC,WACvBC,GAAIH,IAAUI,OAAOF,YCAVG,GCALL,IAAUM,MAAMR,GAAmBI,WAC/BF,IAAUO,QAClBP,IAAUC,OAAOC,YACjBA,WACOF,IAAUQ,KAAKN,WDJF,SAAC,GAAD,IAAGO,EAAH,EAAGA,KAAMC,EAAT,EAASA,SAAUC,EAAnB,EAAmBA,QAAnB,OACtB,4BACEC,KAAK,SACLC,QAAS,kBAAMF,EAAQF,EAAKV,OAC5Be,UAAWC,IAAW,eAAgB,CACpCC,eAAgBN,EAASO,SAASR,EAAKV,SAGxCU,EAAKV,QEPGmB,GCHYlB,IAAUM,MAAM,CACvCI,SAAUV,IAAUC,OAAOC,WAC3BS,QAASX,IAAUQ,KAAKN,WACxBiB,MAAOnB,IAAUO,QAAQP,IAAUC,QAAQC,a,MDAzB,SAAC,GAAD,IAAGiB,EAAH,EAAGA,MAAOT,EAAV,EAAUA,SAAUC,EAApB,EAAoBA,QAApB,OAClB,wBAAIG,UAAU,kBACXK,EAAMC,KAAI,SAAAX,GAAI,OACb,wBAAIY,IAAKZ,EAAKN,GAAIW,UAAU,mBAC1B,kBAAC,EAAD,CACEL,KAAMA,EACNC,SAAUA,EACVC,QAASA,WEKbW,EAbkB,CACtB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGoCF,KAAI,SAACX,EAAMc,GAAP,MAAkB,CAC1DpB,GAAIoB,EACJxB,KAAMU,MA0DOe,E,4MAtDbC,MAAQ,CACNf,SAAU,I,EAGZgB,aAAe,SAAC3B,GAAU,IAChBW,EAAa,EAAKe,MAAlBf,SACFiB,EAAc,YAAOjB,GAE3B,GAAKA,EAASO,SAASlB,GAEhB,CACL,IAAM6B,EAAelB,EAASmB,QAAQ9B,GAEtC4B,EAAeG,OAAOF,EAAc,QAJpCD,EAAeI,KAAKhC,GAOtB,EAAKiC,SAAS,CACZtB,SAAS,YAAKiB,M,EAIlBM,QAAU,WACR,EAAKD,SAAS,CACZtB,SAAU,M,uDAIJ,IACAA,EAAawB,KAAKT,MAAlBf,SAER,OACE,yBAAKI,UAAU,OACb,sDACsBJ,EAASyB,KAAK,QAGpC,4BACEvB,KAAK,SACLE,UAAU,cACVD,QAASqB,KAAKD,SAHhB,KAQA,kBAAC,EAAD,CACEd,MAAOG,EACPZ,SAAUA,EACVC,QAASuB,KAAKR,oB,GAhDNU,IAAMC,WClBxBC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,W","file":"static/js/main.f0b4a572.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\n\nexport const PreparedListProps = {\n  name: PropTypes.string.isRequired,\n  id: PropTypes.number.isRequired,\n};\n","import React from 'react';\nimport classNames from 'classnames';\nimport { ListItemShape } from '../shapes/ListItemShape';\n\nexport const ListItem = ({ item, selected, clicker }) => (\n  <button\n    type=\"button\"\n    onClick={() => clicker(item.name)}\n    className={classNames(`item__button`, {\n      item__selected: selected.includes(item.name),\n    })}\n  >\n    {item.name}\n  </button>\n);\n\nListItem.propTypes = ListItemShape;\n","import PropTypes from 'prop-types';\nimport { PreparedListProps } from './PreparedShape';\n\nexport const ListItemShape = {\n  item: PropTypes.shape(PreparedListProps).isRequired,\n  selected: PropTypes.arrayOf(\n    PropTypes.string.isRequired,\n  ).isRequired,\n  clicker: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport { ListItem } from '../list_item';\nimport { ListShape } from '../shapes/ListShape';\nimport './List.scss';\n\nexport const List = ({ items, selected, clicker }) => (\n  <ul className=\"App__list list\">\n    {items.map(item => (\n      <li key={item.id} className=\"list__item item\">\n        <ListItem\n          item={item}\n          selected={selected}\n          clicker={clicker}\n        />\n      </li>\n    ))\n    }\n  </ul>\n);\n\nList.propTypes = ListShape;\n","import PropTypes from 'prop-types';\n\nexport const ListShape = PropTypes.shape({\n  selected: PropTypes.string.isRequired,\n  clicker: PropTypes.func.isRequired,\n  items: PropTypes.arrayOf(PropTypes.string).isRequired,\n});\n","import React from 'react';\nimport './App.scss';\nimport { List } from './list';\n\nconst goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst preparedGoods = goodsFromServer.map((item, index) => ({\n  id: index,\n  name: item,\n}));\n\nclass App extends React.Component {\n  state = {\n    selected: [],\n  }\n\n  clickHandler = (name) => {\n    const { selected } = this.state;\n    const listOfProducts = [...selected];\n\n    if (!selected.includes(name)) {\n      listOfProducts.push(name);\n    } else {\n      const productIndex = selected.indexOf(name);\n\n      listOfProducts.splice(productIndex, 1);\n    }\n\n    this.setState({\n      selected: [...listOfProducts],\n    });\n  }\n\n  remover = () => {\n    this.setState({\n      selected: [],\n    });\n  }\n\n  render() {\n    const { selected } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>\n          {`Selected goods: ${selected.join(', ')}`}\n        </h1>\n\n        <button\n          type=\"button\"\n          className=\"App__button\"\n          onClick={this.remover}\n        >\n          x\n        </button>\n\n        <List\n          items={preparedGoods}\n          selected={selected}\n          clicker={this.clickHandler}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}